{"version":3,"sources":["Element.js","AddressElement.js","CompanyElement.js","AddUser.js","App.js","serviceWorker.js","index.js"],"names":["check","className","width","height","viewBox","fill","xmlns","fill-rule","d","cancel","editPen","Element","props","useState","editMode","setEditMode","elementEdit","setElementEdit","edit","value","onCancelClicked","onSaveClicked","saveValue","id","type","onChange","e","target","console","log","autoFocus","onKeyPress","key","keyCode","onClick","disabled","trim","onDoubleClick","AddressElement","city","street","suite","zipcode","address","CompanyElement","name","bs","catchPhrase","company","AddUser","initialUser","username","email","phone","website","user","setUser","onChangeEmail","updatedUser","userName","catchphrase","colSpan","canceAddUser","addUser","App","users","setUsers","editingMode","setEditingMode","load","axios","method","url","responseType","then","response","data","saveName","updatedUsers","map","el","saveUserName","saveEmail","savePhone","saveWebsite","saveAddress","elAddress","saveCompany","elCompany","length","scope","max","maxID","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c0a717e.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction Element(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [elementEdit, setElementEdit] = useState('')\n\n    const edit = () => {\n        setEditMode(true);\n        setElementEdit(props.value);\n    }\n    const change = (e) => {\n        setElementEdit(e.target.value);\n        console.log(e.target.value);\n    }\n    const onCancelClicked = () => {\n        setEditMode(false);\n        setElementEdit('');\n    }\n    const onSaveClicked = () => {\n        props.saveValue(elementEdit, props.id);\n        setEditMode(false);\n        setElementEdit('');\n    }\n    const onKeyPressed = (e) => {\n        if (e.key === \"Enter\") onSaveClicked();\n        if (e.keyCode == 27) onCancelClicked();\n        console.log(e.key);\n\n    }\n\n\n    return (\n        <div >\n            {editMode ?\n                <>\n                    <div  className=\"form-group\">\n\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit} onChange={change} autoFocus=\"true\"\n                               onKeyPress={onKeyPressed}\n                        />\n                        <div className=\"button_group\">\n\n                            <button className=\"btn btn-sm btn-danger float-right\" onClick={onCancelClicked}>{cancel}</button>\n                            <button className=\"btn btn-success btn-sm float-right\" onClick={onSaveClicked}\n                                    disabled={elementEdit.trim() === ''}>{check}</button>\n                        </div>\n                    </div>\n\n                </>\n                : <div  onDoubleClick={edit}>\n                    {/*<button className=\"btn btn-sm float-sm-left\" onClick={edit} >{editPen}</button>*/}\n                    <div>{props.value}</div>\n                    <button className=\"btn btn-sm float-sm-right\" onClick={edit}>\n                        {editPen}\n                    </button>\n\n\n                </div>\n            }\n\n\n        </div>\n    );\n}\n\nexport default Element;\n","import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction AddressElement(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [elementEdit, setElementEdit] = useState({})\n    // const [cityEdit, setCityEdit] = useState('');\n    // const [streetEdit, setStreetEdit] = useState('');\n    // const [suiteEdit, setSuiteEdit] = useState('');\n    // const [zippEdit, setZippEdit] = useState('');\n\n    const edit = () => {\n        setEditMode(true);\n        setElementEdit(props.address);\n        // setCityEdit(props.address.city);\n        // setStreetEdit(props.address.street);\n        // setSuiteEdit(props.address.suite);\n        // setZippEdit()\n\n    }\n    const changeCity = (e) => {\n        setElementEdit({...elementEdit, city:e.target.value});\n\n    }\n    const changeStreet = (e) => {\n        setElementEdit({...elementEdit, street:e.target.value});\n\n    }\n    const changeSuite = (e) => {\n        setElementEdit({...elementEdit, suite:e.target.value});\n\n    }\n    const changeZipcode = (e) => {\n        setElementEdit({...elementEdit, zipcode:e.target.value});\n\n    }\n    const onCancelClicked = () => {\n        setEditMode(false);\n        setElementEdit({});\n    }\n    const onSaveClicked = () => {\n        props.saveValue(elementEdit, props.id);\n        setEditMode(false);\n        setElementEdit('');\n    }\n\n    return (\n        <div>\n            {editMode ?\n                <>\n                    <div>\n\n                        <label>City:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.city} onChange={changeCity} autoFocus=\"true\"/>\n                        <label>Street:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.street} onChange={changeStreet} autoFocus=\"true\"/>\n                        <label>Suite:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.suite} onChange={changeSuite} autoFocus=\"true\"/>\n                        <label>Zipcode:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.zipcode} onChange={changeZipcode} autoFocus=\"true\"/>\n\n\n                        <div className=\"button_group\">\n                            <button className=\"btn btn-sm float-right\" onClick={onCancelClicked}>{cancel}</button>\n                            <button className=\"btn btn-sm float-right\" onClick={onSaveClicked}\n                                    disabled={elementEdit.city.trim() === '' && elementEdit.street.trim()  === ''&& elementEdit.suite.trim() === '' &&  elementEdit.zipcode.trim() === ''}>{check}</button>\n\n                        </div>\n                    </div>\n\n                </>\n                : <div>\n\n\n\n\n                    <div><b>City: </b>{props.address.city}</div>\n                    <div><b>Street: </b>{props.address.street}</div>\n                    <div><b>Suite: </b>{props.address.suite}</div>\n                    <div><b>Zipcode: </b>{props.address.zipcode}</div>\n\n                    <button className=\"btn btn-sm float-sm-right\" onClick={edit}>\n                        {editPen}\n                    </button>\n\n\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default AddressElement;\n","import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction CompanyElement(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [elementEdit, setElementEdit] = useState({})\n    // const [cityEdit, setCityEdit] = useState('');\n    // const [streetEdit, setStreetEdit] = useState('');\n    // const [suiteEdit, setSuiteEdit] = useState('');\n    // const [zippEdit, setZippEdit] = useState('');\n\n    const edit = () => {\n        setEditMode(true);\n        setElementEdit(props.company);\n        // setCityEdit(props.address.city);\n        // setStreetEdit(props.address.street);\n        // setSuiteEdit(props.address.suite);\n        // setZippEdit()\n\n    }\n    const changeCompanyName = (e) => {\n        setElementEdit({...elementEdit, name:e.target.value});\n\n    }\n    const changeBS = (e) => {\n        setElementEdit({...elementEdit, bs:e.target.value});\n\n    }\n    const changeCatch = (e) => {\n        setElementEdit({...elementEdit, catchPhrase:e.target.value});\n\n    }\n\n    const onCancelClicked = () => {\n        setEditMode(false);\n        setElementEdit({});\n    }\n    const onSaveClicked = () => {\n        props.saveValue(elementEdit, props.id);\n        setEditMode(false);\n        setElementEdit('');\n    }\n\n    return (\n        <div>\n            {editMode ?\n                <>\n                    <div>\n\n                        <label>Name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.name} onChange={changeCompanyName} autoFocus=\"true\"/>\n                        <label>BS:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.bs} onChange={changeBS} autoFocus=\"true\"/>\n                        <label>Catch Phrase: </label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.catchPhrase} onChange={changeCatch} autoFocus=\"true\"/>\n\n                        <div className=\"button_group\">\n                            <button className=\"btn btn-sm float-right\" onClick={onCancelClicked}>{cancel}</button>\n                            <button className=\"btn btn-sm float-right\" onClick={onSaveClicked}\n                                    disabled={elementEdit.name.trim() === '' && elementEdit.bs.trim()  === ''&& elementEdit.catchPhrase.trim() === ''}>{check}</button>\n\n                        </div>\n                    </div>\n\n                </>\n                : <div>\n\n\n                    <div><b>Name: </b>{props.company.name}</div>\n                    <div><b>BS: </b>{props.company.bs}</div>\n                    <div><b>Catch Phrase: </b>{props.company.catchPhrase}</div>\n\n                    <button className=\"btn btn-sm float-sm-right\" onClick={edit}>\n                        {editPen}\n                    </button>\n\n\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default CompanyElement;\n","import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction AddUser(props) {\n\n    const initialUser = {\n        id: props.id,\n        name: '',\n        username: '',\n        email: '',\n        address: {\n            city: '',\n            street: '',\n            suite: '',\n            zipcode: ''\n        },\n        phone: '',\n        website: '',\n        company: {\n            name: '',\n            bs: '',\n            catchPhrase: ''\n        }\n    }\n\n    const [user, setUser] = useState(initialUser);\n\n    const onChangeName = (e) => {\n        console.log('onChangeName launched');\n        console.log('user');\n        console.log(user);\n\n        const updatedUser = {...user, name: e.target.value}\n        console.log('updatedUser');\n        setUser(updatedUser);\n        console.log(updatedUser);\n        console.log('onChangeName exit');\n    }\n    const onChangeUserName = (e) => {\n        setUser({...user, userName: e.target.value});\n        console.log(user);\n    }\n    const onChangeEmail = (e) => {\n        setUser({...user, email: e.target.value});\n        console.log(user);\n    }\n    const onchangeCity = (e) => {\n        setUser({...user, address: {city: e.target.value}});\n        console.log(user);\n    }\n    const onchangeStreet = (e) => {\n        setUser({...user, address: {street: e.target.value}});\n        console.log(user);\n    }\n    const onchangeSuite = (e) => {\n        setUser({...user, address: {suite: e.target.value}});\n        console.log(user);\n    }\n    const onchangeZipcode = (e) => {\n        setUser({...user, address: {zipcode: e.target.value}});\n        console.log(user);\n    }\n\n\n    const onchangeCompanyName = (e) => {\n        setUser({...user, company: {name: e.target.value}});\n        console.log(user);\n    }\n    const onchangeBS = (e) => {\n        setUser({...user, company: {bs: e.target.value}});\n        console.log(user);\n    }\n    const onchangeCatch = (e) => {\n        setUser({...user, company: {catchphrase: e.target.value}});\n        console.log(user);\n    }\n    const addUser = () => {\n        setUser({...user, id: props.id});\n        console.log(user);\n        props.addUser(user);\n        setUser(initialUser);\n\n    }\n    const cancelAddUser = () => {\n        setUser(initialUser);\n        console.log(user);\n        props.canceAddUser();\n    }\n\n    return (\n        <>\n\n            <tr>\n                <td>{props.id}\n\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputName\"\n                               value={user.name} onChange={onChangeName} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Username:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputUserName\"\n                               value={user.username} onChange={onChangeUserName} autoFocus=\"true\"\n                        />\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Email:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputEmail\"\n                               value={user.email} onChange={onChangeEmail} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div>\n\n                        <label>City:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputCity1\"\n                               value={user.address.city} onChange={onchangeCity} autoFocus=\"true\"/>\n                        <label>Street:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputStreet\"\n                               value={user.address.street} onChange={onchangeStreet} autoFocus=\"true\"/>\n                        <label>Suite:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputSuite\"\n                               value={user.address.suite} onChange={onchangeSuite} autoFocus=\"true\"/>\n                        <label>Zipcode:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputZipcode\"\n                               value={user.address.zipcode} onChange={onchangeZipcode} autoFocus=\"true\"/>\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Phone:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputPhone\"\n                               value={user.phone} onChange={onChangeEmail} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Website:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputWebsite\"\n                               value={user.website} onChange={onChangeEmail} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div>\n\n                        <label>Name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputCompanyName\"\n                               value={user.company.name} onChange={onchangeCompanyName} autoFocus=\"true\"/>\n                        <label>BS:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputBS\"\n                               value={user.company.bs} onChange={onchangeBS} autoFocus=\"true\"/>\n                        <label>Catch Phrase: </label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputCatch\"\n                               value={user.company.catchPhrase} onChange={onchangeCatch} autoFocus=\"true\"/>\n                    </div>\n                </td>\n\n            </tr>\n            <tr>\n                <td colSpan='10'>\n                    <div className=\"button_group\">\n\n                        <button className=\"btn btn-danger  m-1\" onClick={cancelAddUser}>Cancel</button>\n                        <button className=\"btn btn-success m-1\" onClick={addUser}disabled={user.name.trim() ===''}>Save</button>\n                    </div>\n                </td>\n            </tr>\n        </>\n\n    );\n}\n\nexport default AddUser;\n","import React, {useState} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Element from \"./Element\";\nimport AddressElement from \"./AddressElement\";\nimport CompanyElement from \"./CompanyElement\";\nimport AddUser from \"./AddUser\";\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [editingMode, setEditingMode] = useState(false)\n    const load = () => {\n        setEditingMode(false);\n        console.log('load');\n        // fetch('https://jsonplaceholder.typicode.com/users')\n        //     .then(response => response.json())\n        //     .then(json => {\n        //     setUsers(json);\n        //     });\n        axios({\n            method: 'get',\n            url: 'https://jsonplaceholder.typicode.com/users',\n            responseType: 'stream'\n        })\n            .then(function (response) {\n                console.log(response);\n                setUsers(response.data);\n            });\n    };\n\n    const onAddUser = ()=>{\n        setEditingMode(true);\n    }\n\n    const saveName = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, name: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n    const saveUserName = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, username: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n    const saveEmail = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, email: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n\n    const savePhone = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, phone: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n    const saveWebsite\n        = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, phone: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n\n    const saveAddress\n        = (elAddress, id) => {\n        console.log(\"saveAddress launched\", elAddress, id);\n\n        const updatedUsers = users.map(el => {\n            // if (el.id === id) return {...el, ...el.address, city: elAddress.city, street: elAddress.street, suite: elAddress.suite, zipcode: elAddress.zipcode};\n            if (el.id === id) { return {...el, address:elAddress}\n            console.log(el)\n            }\n                else return el;\n            }\n        );\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"saveAddress finished\");\n\n    }\n    const saveCompany = (elCompany, id)=>{\n        const updatedUsers = users.map(el => {\n            if(el.id === id){return {... el, company: elCompany}}\n            else return el;\n\n        });\n        setUsers(updatedUsers);\n\n    }\n    const canceAddUser = ()=>{\n        setEditingMode(false);\n    }\n\n    const addUser = (el)=>{\n        const updatedUsers = [... users];\n        updatedUsers.push(el)\n        setUsers(updatedUsers);\n        setEditingMode(false);\n\n    }\n    const maxID = ()=>{\n        let max = 0;\n        users.map(el=> { if(el.id > max) max = el.id});\n        return max;\n    }\n    return (\n        <div>\n            <h1>Users</h1>\n            {users.length <= 0 ?<button className=\"btn btn-primary m-1\" onClick={load}>Load Users</button>\n                :<><button className=\"btn btn-primary m-1\" onClick={load}>Reoad Users</button>\n                {!editingMode? <button className=\"btn btn-primary m-1\" onClick={onAddUser}>Add User</button>\n                :<></>}\n                </>\n            }\n            {users.length > 0 ?\n                <div>\n                    <table className=\"table table table-hover table-bordered table-striped\">\n                        <thead className=\"thead-light\">\n                        <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Username</th>\n                            <th scope=\"col\">email</th>\n                            <th scope=\"col\">Address</th>\n                            <th scope=\"col\">Phone</th>\n                            <th scope=\"col\">Website</th>\n                            <th scope=\"col\">Company</th>\n                        </tr>\n                        </thead>\n                        <tbody className=\"text-body\">\n                        {editingMode?<AddUser id={maxID()+1} addUser={addUser} canceAddUser={canceAddUser}/>:<></>}\n                        {users.map(el =>\n                            <tr>\n                                <td>{el.id}</td>\n                                <td><Element value={el.name} id={el.id} saveValue={saveName}/></td>\n                                <td><Element value={el.username} id={el.id} saveValue={saveUserName}/></td>\n                                <td><Element value={el.email} id={el.id} saveValue={saveEmail}/></td>\n                                <td><AddressElement address={el.address} id={el.id} saveValue={saveAddress}/></td>\n                                <td><Element value={el.phone} id={el.id} saveValue={savePhone}/></td>\n                                <td><Element value={el.website} id={el.id} saveValue={saveWebsite}/></td>\n                                <td><CompanyElement company={el.company}  id={el.id} saveValue={saveCompany}/></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n                : <></>\n            }\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}