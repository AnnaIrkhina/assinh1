{"version":3,"sources":["Element.js","AddressElement.js","CompanyElement.js","AddUser.js","App.js","serviceWorker.js","index.js"],"names":["check","className","width","height","viewBox","fill","xmlns","fill-rule","d","cancel","Element","props","useState","editMode","setEditMode","elementEdit","setElementEdit","onCancelClicked","onSaveClicked","saveValue","id","type","value","onChange","e","target","console","log","autoFocus","onKeyPress","key","keyCode","onClick","disabled","trim","onDoubleClick","AddressElement","city","street","suite","zipcode","address","CompanyElement","name","bs","catchPhrase","company","AddUser","initialUser","username","email","phone","website","user","setUser","updatedUser","colSpan","addUser","canceAddUser","App","users","setUsers","editingMode","setEditingMode","load","axios","method","url","responseType","then","response","data","saveName","updatedUsers","map","el","saveUserName","saveEmail","savePhone","saveWebsite","saveAddress","elAddress","saveCompany","elCompany","length","filter","checked","scope","max","maxID","push","undefined","onCheck","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.87d375ca.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction Element(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [elementEdit, setElementEdit] = useState('')\n\n    const edit = () => {\n        setEditMode(true);\n        setElementEdit(props.value);\n    }\n    const change = (e) => {\n        setElementEdit(e.target.value);\n        console.log(e.target.value);\n    }\n    const onCancelClicked = () => {\n        setEditMode(false);\n        setElementEdit('');\n    }\n    const onSaveClicked = () => {\n        props.saveValue(elementEdit, props.id);\n        setEditMode(false);\n        setElementEdit('');\n    }\n    const onKeyPressed = (e) => {\n        if (e.key === \"Enter\") onSaveClicked();\n        if (e.keyCode == 27) onCancelClicked();\n        console.log(e.key);\n\n    }\n\n\n    return (\n        <div >\n            {editMode ?\n                <>\n                    <div  className=\"form-group\">\n\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit} onChange={change} autoFocus=\"true\"\n                               onKeyPress={onKeyPressed}\n                        />\n                        <div className=\"button_group\">\n\n                            <button className=\"btn btn-sm btn-danger float-right\" onClick={onCancelClicked}>{cancel}</button>\n                            <button className=\"btn btn-success btn-sm float-right\" onClick={onSaveClicked}\n                                    disabled={elementEdit.trim() === ''}>{check}</button>\n                        </div>\n                    </div>\n\n                </>\n                : <div  onDoubleClick={edit}>\n                    {/*<button className=\"btn btn-sm float-sm-left\" onClick={edit} >{editPen}</button>*/}\n                    <div>{props.value}</div>\n                    {/*<button className=\"btn btn-sm btn-secondary float-sm-right\" onClick={edit}>*/}\n                    {/*    {editPen}*/}\n                    {/*</button>*/}\n\n\n                </div>\n            }\n\n\n        </div>\n    );\n}\n\nexport default Element;\n","import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction AddressElement(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [elementEdit, setElementEdit] = useState({})\n    // const [cityEdit, setCityEdit] = useState('');\n    // const [streetEdit, setStreetEdit] = useState('');\n    // const [suiteEdit, setSuiteEdit] = useState('');\n    // const [zippEdit, setZippEdit] = useState('');\n\n    const edit = () => {\n        setEditMode(true);\n        setElementEdit(props.address);\n        // setCityEdit(props.address.city);\n        // setStreetEdit(props.address.street);\n        // setSuiteEdit(props.address.suite);\n        // setZippEdit()\n\n    }\n    const changeCity = (e) => {\n        setElementEdit({...elementEdit, city:e.target.value});\n\n    }\n    const changeStreet = (e) => {\n        setElementEdit({...elementEdit, street:e.target.value});\n\n    }\n    const changeSuite = (e) => {\n        setElementEdit({...elementEdit, suite:e.target.value});\n\n    }\n    const changeZipcode = (e) => {\n        setElementEdit({...elementEdit, zipcode:e.target.value});\n\n    }\n    const onCancelClicked = () => {\n        setEditMode(false);\n        setElementEdit({});\n    }\n    const onSaveClicked = () => {\n        props.saveValue(elementEdit, props.id);\n        setEditMode(false);\n        setElementEdit('');\n    }\n\n    return (\n        <div>\n            {editMode ?\n                <>\n                    <div>\n\n                        <label>City:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.city} onChange={changeCity} autoFocus=\"true\"/>\n                        <label>Street:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.street} onChange={changeStreet} autoFocus=\"true\"/>\n                        <label>Suite:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.suite} onChange={changeSuite} autoFocus=\"true\"/>\n                        <label>Zipcode:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.zipcode} onChange={changeZipcode} autoFocus=\"true\"/>\n\n\n                        <div className=\"button_group\">\n                            <button className=\"btn btn-sm btn-danger float-right\" onClick={onCancelClicked}>{cancel}</button>\n                            <button className=\"btn btn-sm btn-success float-right\" onClick={onSaveClicked}\n                                    disabled={elementEdit.city.trim() === '' && elementEdit.street.trim()  === ''&& elementEdit.suite.trim() === '' &&  elementEdit.zipcode.trim() === ''}>{check}</button>\n\n                        </div>\n                    </div>\n\n                </>\n                : <div onDoubleClick={edit}>\n                    <div><b>City: </b>{props.address.city}</div>\n                    <div><b>Street: </b>{props.address.street}</div>\n                    <div><b>Suite: </b>{props.address.suite}</div>\n                    <div><b>Zipcode: </b>{props.address.zipcode}</div>\n\n                    {/*<button className=\"btn btn-sm  btn-secondary float-sm-right\" onClick={edit}>*/}\n                    {/*    {editPen}*/}\n                    {/*</button>*/}\n\n\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default AddressElement;\n","import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction CompanyElement(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [elementEdit, setElementEdit] = useState({})\n    // const [cityEdit, setCityEdit] = useState('');\n    // const [streetEdit, setStreetEdit] = useState('');\n    // const [suiteEdit, setSuiteEdit] = useState('');\n    // const [zippEdit, setZippEdit] = useState('');\n\n    const edit = () => {\n        setEditMode(true);\n        setElementEdit(props.company);\n        // setCityEdit(props.address.city);\n        // setStreetEdit(props.address.street);\n        // setSuiteEdit(props.address.suite);\n        // setZippEdit()\n\n    }\n    const changeCompanyName = (e) => {\n        setElementEdit({...elementEdit, name:e.target.value});\n\n    }\n    const changeBS = (e) => {\n        setElementEdit({...elementEdit, bs:e.target.value});\n\n    }\n    const changeCatch = (e) => {\n        setElementEdit({...elementEdit, catchPhrase:e.target.value});\n\n    }\n\n    const onCancelClicked = () => {\n        setEditMode(false);\n        setElementEdit({});\n    }\n    const onSaveClicked = () => {\n        props.saveValue(elementEdit, props.id);\n        setEditMode(false);\n        setElementEdit('');\n    }\n\n    return (\n        <div>\n            {editMode ?\n                <>\n                    <div>\n\n                        <label>Name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.name} onChange={changeCompanyName} autoFocus=\"true\"/>\n                        <label>BS:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.bs} onChange={changeBS} autoFocus=\"true\"/>\n                        <label>Catch Phrase: </label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInput1\"\n                               value={elementEdit.catchPhrase} onChange={changeCatch} autoFocus=\"true\"/>\n\n                        <div className=\"button_group\">\n                            <button className=\"btn btn-sm btn-danger float-right\" onClick={onCancelClicked}>{cancel}</button>\n                            <button className=\"btn btn-sm btn-success float-right\" onClick={onSaveClicked}\n                                    disabled={elementEdit.name.trim() === '' && elementEdit.bs.trim()  === ''&& elementEdit.catchPhrase.trim() === ''}>{check}</button>\n\n                        </div>\n                    </div>\n\n                </>\n                : <div onDoubleClick={edit}>\n\n\n                    <div><b>Name: </b>{props.company.name}</div>\n                    <div><b>BS: </b>{props.company.bs}</div>\n                    <div><b>Catch Phrase: </b>{props.company.catchPhrase}</div>\n\n                    {/*<button className=\"btn btn-sm  btn-secondary  float-sm-right\" onClick={edit}>*/}\n                    {/*    {editPen}*/}\n                    {/*</button>*/}\n\n\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default CompanyElement;\n","import React, {useState} from 'react';\nimport './App.css';\n\nconst check = (<svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nconst editPen = (\n    <svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n);\n\nfunction AddUser(props) {\n\n    const initialUser = {\n        id: props.id,\n        name: '',\n        username: '',\n        email: '',\n        address: {\n            city: '',\n            street: '',\n            suite: '',\n            zipcode: ''\n        },\n        phone: '',\n        website: '',\n        company: {\n            name: '',\n            bs: '',\n            catchPhrase: ''\n        }\n    }\n\n    const [user, setUser] = useState(initialUser);\n\n    const onChangeName = (e) => {\n        console.log('onChangeName launched');\n        console.log('user');\n        console.log(user);\n\n        const updatedUser = {...user, name: e.target.value}\n        console.log('updatedUser');\n        setUser(updatedUser);\n        console.log(updatedUser);\n        console.log('onChangeName exit');\n    }\n    const onChangeUserName = (e) => {\n        setUser({...user, username: e.target.value});\n        console.log(user);\n    }\n    const onChangeEmail = (e) => {\n        setUser({...user, email: e.target.value});\n        console.log(user);\n    }\n    const onPhone = (e) => {\n        setUser({...user, phone: e.target.value});\n        console.log(user);\n    }\n    const onChangeWebsite = (e) => {\n        setUser({...user, website: e.target.value});\n        console.log(user);\n    }\n    const onchangeCity = (e) => {\n        setUser({...user, address: {...user.address, city: e.target.value}});\n        console.log(user);\n    }\n    const onchangeStreet = (e) => {\n        setUser({...user, address: {...user.address, street: e.target.value}});\n        console.log(user);\n    }\n    const onchangeSuite = (e) => {\n        setUser({...user, address: {...user.address, suite: e.target.value}});\n        console.log(user);\n    }\n    const onchangeZipcode = (e) => {\n        setUser({...user, address: {...user.address, zipcode: e.target.value}});\n        console.log(user);\n    }\n\n\n    const onchangeCompanyName = (e) => {\n        setUser({...user, company: {...user.company, name: e.target.value}});\n        console.log(user);\n    }\n    const onchangeBS = (e) => {\n        setUser({...user, company: {...user.company, bs: e.target.value}});\n        console.log(user);\n    }\n    const onchangeCatch = (e) => {\n        setUser({...user, company: {...user.company, catchPhrase: e.target.value}});\n        console.log(user);\n    }\n    const addUser = () => {\n        setUser({...user, id: props.id});\n        console.log(user);\n        props.addUser(user);\n        setUser(initialUser);\n\n    }\n    const cancelAddUser = () => {\n        setUser(initialUser);\n        console.log(user);\n        props.canceAddUser();\n    }\n\n    return (\n        <>\n\n            <tr>\n                <td>{props.id}\n\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputName\"\n                               value={user.name} onChange={onChangeName} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Username:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputUserName\"\n                               value={user.username} onChange={onChangeUserName} autoFocus=\"true\"\n                        />\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Email:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputEmail\"\n                               value={user.email} onChange={onChangeEmail} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div>\n\n                        <label>City:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputCity1\"\n                               value={user.address.city} onChange={onchangeCity} autoFocus=\"true\"/>\n                        <label>Street:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputStreet\"\n                               value={user.address.street} onChange={onchangeStreet} autoFocus=\"true\"/>\n                        <label>Suite:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputSuite\"\n                               value={user.address.suite} onChange={onchangeSuite} autoFocus=\"true\"/>\n                        <label>Zipcode:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputZipcode\"\n                               value={user.address.zipcode} onChange={onchangeZipcode} autoFocus=\"true\"/>\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Phone:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputPhone\"\n                               value={user.phone} onChange={onPhone} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div className=\"form-group\">\n                        <label>Website:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputWebsite\"\n                               value={user.website} onChange={onChangeWebsite} autoFocus=\"true\"\n\n                        />\n\n                    </div>\n                </td>\n                <td>\n                    <div>\n\n                        <label>Name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputCompanyName\"\n                               value={user.company.name} onChange={onchangeCompanyName} autoFocus=\"true\"/>\n                        <label>BS:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputBS\"\n                               value={user.company.bs} onChange={onchangeBS} autoFocus=\"true\"/>\n                        <label>Catch Phrase: </label>\n                        <input type=\"text\" className=\"form-control\" id=\"formControlInputCatch\"\n                               value={user.company.catchPhrase} onChange={onchangeCatch} autoFocus=\"true\"/>\n                    </div>\n                </td>\n\n            </tr>\n            <tr>\n                <td colSpan='10'>\n                    <div className=\"button_group\">\n\n\n                        <button className=\"btn btn-success m-1\" onClick={addUser}disabled={user.name.trim() ===''}>Save</button>\n                        <button className=\"btn btn-danger  m-1\" onClick={cancelAddUser}>Cancel</button>\n                    </div>\n                </td>\n            </tr>\n        </>\n\n    );\n}\n\nexport default AddUser;\n","import React, {useState} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Element from \"./Element\";\nimport AddressElement from \"./AddressElement\";\nimport CompanyElement from \"./CompanyElement\";\nimport AddUser from \"./AddUser\";\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [editingMode, setEditingMode] = useState(false)\n    const load = () => {\n        setEditingMode(false);\n        console.log('load');\n        // fetch('https://jsonplaceholder.typicode.com/users')\n        //     .then(response => response.json())\n        //     .then(json => {\n        //     setUsers(json);\n        //     });\n        axios({\n            method: 'get',\n            url: 'https://jsonplaceholder.typicode.com/users',\n            responseType: 'stream'\n        })\n            .then(function (response) {\n                console.log(response);\n                setUsers(response.data);\n            });\n    };\n\n    const onAddUser = ()=>{\n        setEditingMode(true);\n    }\n\n    const saveName = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, name: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n    const saveUserName = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, username: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n    const saveEmail = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, email: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n\n    const savePhone = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, phone: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n    const saveWebsite\n        = (value, id) => {\n        console.log(\"onChange launched\", value, id);\n        const updatedUsers = users.map(el => {\n            if (el.id === id) return {...el, website: value};\n            else return el;\n        });\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"onChange finished\");\n\n    }\n\n    const saveAddress\n        = (elAddress, id) => {\n        console.log(\"saveAddress launched\", elAddress, id);\n\n        const updatedUsers = users.map(el => {\n            // if (el.id === id) return {...el, ...el.address, city: elAddress.city, street: elAddress.street, suite: elAddress.suite, zipcode: elAddress.zipcode};\n            if (el.id === id) { return {...el, address:elAddress}\n            console.log(el)\n            }\n                else return el;\n            }\n        );\n        setUsers(updatedUsers);\n        console.log(updatedUsers);\n        console.log(\"saveAddress finished\");\n\n    }\n    const saveCompany = (elCompany, id)=>{\n        const updatedUsers = users.map(el => {\n            if(el.id === id){return {... el, company: elCompany}}\n            else return el;\n\n        });\n        setUsers(updatedUsers);\n\n    }\n    const canceAddUser = ()=>{\n        setEditingMode(false);\n    }\n\n    const addUser = (el)=>{\n        const updatedUsers = [... users];\n        updatedUsers.push(el)\n        setUsers(updatedUsers);\n        setEditingMode(false);\n\n    }\n    const maxID = ()=>{\n        let max = 0;\n        users.map(el=> { if(el.id > max) max = el.id});\n        return max;\n    }\n    const onCheck = (id)=>{\n        console.log('onCheck launched with is = ' + id);\n        const updatedUsers = users.map(el=>{\n            if(el.id === id) {\n                if(el.checked === true){return{...el, checked: false}}\n                else{return{...el, checked: true}}\n            }\n            else {\n                if(el.checked === undefined){return{...el, checked: false}}\n                else return el;\n            }\n\n        });\n        setUsers(updatedUsers);\n\n    }\n    const removeAllChecked =()=>{\n        const updatedUsers = users.filter(el=> el.checked !== true);\n        setUsers(updatedUsers);\n    }\n    return (\n        <div>\n            <h1>Users</h1>\n            {users.length <= 0 ?<button className=\"btn btn-primary m-1\" onClick={load}>Load Users</button>\n                :<><button className=\"btn btn-primary m-1\" onClick={load}>Reload Users</button>\n                    <button className=\"btn btn-primary m-1\" onClick={removeAllChecked}>Remove All Checked</button>\n                {!editingMode? <button className=\"btn btn-primary m-1\" onClick={onAddUser}>Add User</button>\n                :<></>}\n                </>\n            }\n            {users.length > 0 ?\n                <div>\n                    <table className=\"table table table-hover table-bordered table-striped\">\n                        <thead className=\"thead-light\">\n                        <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Username</th>\n                            <th scope=\"col\">email</th>\n                            <th scope=\"col\">Address</th>\n                            <th scope=\"col\">Phone</th>\n                            <th scope=\"col\">Website</th>\n                            <th scope=\"col\">Company</th>\n                        </tr>\n                        </thead>\n                        <tbody className=\"text-body\">\n                        {editingMode?<AddUser id={maxID()+1} addUser={addUser} canceAddUser={canceAddUser}/>:<></>}\n                        {users.map(el =>\n                            <tr>\n                                <td>{el.id}<input type=\"checkbox\" onClick={()=>onCheck(el.id)} checked={el.checked === true}/></td>\n                                <td><Element value={el.name} id={el.id} saveValue={saveName}/></td>\n                                <td><Element value={el.username} id={el.id} saveValue={saveUserName}/></td>\n                                <td><Element value={el.email} id={el.id} saveValue={saveEmail}/></td>\n                                <td><AddressElement address={el.address} id={el.id} saveValue={saveAddress}/></td>\n                                <td><Element value={el.phone} id={el.id} saveValue={savePhone}/></td>\n                                <td><Element value={el.website} id={el.id} saveValue={saveWebsite}/></td>\n                                <td><CompanyElement company={el.company}  id={el.id} saveValue={saveCompany}/></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n                : <></>\n            }\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}